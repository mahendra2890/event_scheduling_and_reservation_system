version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: event_scheduler_web_prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=event_scheduling_system.settings
      - DATABASE_URL=postgresql://event_scheduler:event_scheduler_password@db:5432/event_scheduler
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - event_scheduler_network
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media

  db:
    image: postgres:15
    container_name: event_scheduler_db_prod
    restart: unless-stopped
    environment:
      - POSTGRES_DB=event_scheduler
      - POSTGRES_USER=event_scheduler
      - POSTGRES_PASSWORD=event_scheduler_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - event_scheduler_network

  # Optional: Redis for caching and sessions
  # redis:
  #   image: redis:7-alpine
  #   container_name: event_scheduler_redis_prod
  #   restart: unless-stopped
  #   networks:
  #     - event_scheduler_network

  # Optional: Nginx reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: event_scheduler_nginx_prod
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - static_volume:/app/static
  #     - media_volume:/app/media
  #   depends_on:
  #     - web
  #   networks:
  #     - event_scheduler_network

networks:
  event_scheduler_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
